2023-04-20 18일차 강의일지

Date 클래스
= (현재)날짜를 표현
= toString() 메서드 : 특정 문자열 format 읽음

SimpleDateFormat
= 날짜를 원하는 형식으로 표현

Calendar 클래스
= 달력을 표현
= get() 메서드로 날짜와 시간에 대한 정보 읽음

Random 클래스
= 다양한 난수값을 얻음
= nextBoolean() : true or false 반환
= nextDouble() : 0.0이상 ~ 1.0미만 값 반환
= nextInt() : int의 범위 내 값 반환
= nextInt(int n) : 0이상 ~ n미만 값 반환

제네릭
= 클래스<> or 인터페이스<>
= 타입 안정화(내부에 저장되는 객체를 <타입>으로 일치시킴)
= 기본형 자료를 제네릭에 넣을 수 없음

Collection
= 배열과 유사
= 데이터 저장/조회/수정/삭제 작업이 용이

List Collection(String 타입만 저장 가능)
= 객체 검색 및 삭제 가능
= 순서대로 저장 가능
= 동일한 객체 중복 저장 가능
= ArrayList<>() or LinkedList<>()으로 사용
= 메서드
add(객체) : 마지막 지점에 객체 추가
size() : 총 객체 수 얻기(for문 이용하여 인덱스 조회 가능)
add(index, 객체) : 해당 인덱스의 객체 삽입
set(index, 객체) : 해당 인덱스의 객체 수정
get(index) : 해당 인덱스의 객체 가져오기
* 없는 자료 조회 시 -1값 반환
remove(index) : 해당 인덱스의 객체 삭제
remove(객체) : 해당 객체 삭제
contains(객체) : 객체가 있으면 true, 없으면 false
isEmpty() : 객체가 없으면 true, 있으면 false
clear() : 내부 객체 전체 삭제(list라는 박스는 남아 있음)

배열기반 데이터 입출력
= ArrayList(자주 사용)
= 데이터 변경이 많지 않은 경우(조회 등)

노드기반 데이터 입출력
= LinkedList
= 데이터 변경이 많은 경우(삽입/수정/삭제 등)

Set 계열 Collection
= 저장 순서를 보장 x(인덱스 관리 x)
= 중복 저장 x
= 메서드
add() : set에 객체를 추가
size() : set에 저장된 객체의 수 반환
iterator() : set에 순번 부여(한번씩 반복해서 전체 객체 반환)
hasNext() : 다음 순번에 객체가 있으면 true, 없으면 false
next() : 다음 순번의 객체로 이동해서 가져옴
remove(객체) : set에 있는 해당 객체를 제거
clear() : set에 있는 모든 객체를 제거

* 순번 = 포인터
* 자료 = 객체
* 구현체 = 인터페이스를 구체화

초기 포인터는 -1에 위치
next()에 의해서 포인터 +1 이동해서 데이터 가져옴
hasNext()에서 포인터 이동 없이, 다음 값 체크함

Map 계열 Collection
= 키(인덱스에 있는 유일값, 중복 불가)와 값(중복 저장 가능)으로 구성
= Json 포맷과 교환이 용이
= 키와 값의 타입은 기본 타입 사용 x
= entry(키와 값의 쌍)
= 메서드
put(key, value) : key값 = value값 객체 저장
size() : key, value의 쌍(entry) 개수 측정
get(key) : 해당key에서 value값을 가져옴
keySet() : key값을 전부 가져옴
values() : value값을 전부 가져옴
containsKey(키 값) : 해당 키 값 있으면 true, 없으면 false
remove(키 값) : 일치하는 키 값의 entry 한 쌍 삭제
clear() : 전체 내부 데이터 일괄 삭제
isEmpty() : 비어 있으면 true, 안 비어 있으면 false

