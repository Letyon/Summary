2023-03-29 2일차 강의일지

프로그래밍 언어 배우는 이유 = 기계어를 모르기 때문에
상수를 쓰는 이유 = 매직넘버 안 쓰기 위해서
프로젝트명 = 소문자 + 숫자로만 구성

<주석 사용법>
1. 한줄 주석(//): 주석 내용이 한줄일 때 사용. // 다음부터 그 줄의 끝까지의 내용이 주석으로 간주됩니다.
2. 여러 줄 주석(/* ~~~~~ */): 여러 줄의 주석이 필요할 때 사용. /* ~~ */ 사이의 내용이 모두 주석 처리됩니다.

<이진수>
1(음수 부호) + 0101(절댓값) = -5
0(양수 부호) + 0101(절댓값) = 5

1) 그래서 실제로도 컴퓨터는 양수를 부호와 절대값 방식으로 구해놓고, 
2) 음수가 필요하다면 구해놓은 양수를 2의 보수 방식으로 변환해 처리합니다.

(양수/음수)정수의 범위 = (2^n-1) - 1
2의 보수 = 1의 자리에 1을 더함으로써, 한 칸씩 밀려서 100000 음의 정수가 됨

<기술면접용>
경계값 테스트 = 최댓값 범위 근처에서 실행하는 것

<데이터 타입>
byte = 1byte
short = 2byte
int = 4byte
long = 8byte

(byte, short, int, long)데이터 타입 = 박스 크기
숫자 = 박스에 넣을 데이터 양

<이진수 환산법> = 경계 값 먼저 찾은 후, 숫자 빼기
32 < 37
-> 5만큼 차이
(5 - 4 - 1)

      4   1
1 0 0 1 0 1
5 4 3 2 1 0

매직넘버 정수 기본 = int형
매직넘버 실수 기본 = double형

실수형 데이터 타입(double가 기본형) = (양수/음수)(자릿수)(소수)
-> 정수형 데이터 타입과 상응하지 않음(비트 구조가 아예 다르기 때문)

논리형 데이터타입에서는 오직 true와 false만 허용합니다.(0과 1로 변환하여 사용 안 됨.)

<키워드>
home 키 = 가장 왼쪽으로 커서 이동
end 키 = 가장 오른쪽으로 커서 이동
ctrl + shift + 방향키 = 적정선의 블록 지정

<스택/힙>
기본형 변수 = 스택에 있는 데이터를 불러옴
참조형 변수 = 스택(번지 주소 저장)이 힙에 있는 해당 번지 주소(그 안의 값들)를 불러옴

스택 = 1개의 값 or 1개의 번지 주소만 저장
힙 = 해당 번지 주소(그 안의 값들) 저장

스택(힙의 번지 주소)에서 호출하면 -> 해당 번지 주소를 가진 힙의 데이터가 불려짐

(정수 -> 실수)로 변환하여 계산해야 오류가 없음
(작은 쪽에서 -> 표현 범위가 큰 쪽으로) 데이터 타입 맞춰서 계산해야 오류가 없음

<문자열/단일문자>
"(쌍따옴표)로 감싼 자료는 문자열로 간주
'(홑따옴표)로 감싼 자료는 단일 문자로 간주
숫자 100(백) = 연산 목적
문자열 "100"(일공공) = 식별 목적

<단항 연산자>
i++후위연산자 = 대입 등 실행 먼저, 증감 나중
++i전위연산자 = 증감 먼저, 대입 등 실행 나중

<git bash cli모드>
git init = git 생성
git status = git 상태 확인
git add . = git stage로 모든 파일 업로드
git commit -m "메시지" = git파일 "메시지"와 함께 커밋
git log --graph = git 현재 내역 확인
git checkout 고유번호7자리 = git 체크아웃
git log --all = git 전체 내역 확인
git checkout - = git 최신버전으로 복구






