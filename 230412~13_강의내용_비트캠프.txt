2023-04-12~13 12~13일차 강의일지

<다형성>
--> 부모 인스턴스와 자식 인스턴스가 동시에 존재 가능
(따라서, 부모 인스턴스를 오버라이딩해서 정의한 인터페이스는 자식 인스턴스에서 구현 가능)

getter/setter 자동 생성
1. alt + shift + s || 우클릭 -> source
2. generate getters and setters

getter(값을 호출)/setter(값을 저장)
= 같은 파일인 경우에는 호출할 필요 없어서 사용 x
= 다른 파일인 경우에 호출하여 사용 o

응집도(높이고) = 관린된 기능이나 로직끼리 모아두는 것
결합도(낮추고) = 서로 다른 클래스의 로직이 섞여서, 하나의 클래스가 변동되면 다른 쪽 로직까지 같이 고쳐줘야 하는 케이스

<리팩토링>
= 코드의 기능을 유지하면서, 구조만 변경하는 것

<이종모음>
Object = 모든 자료형의 부모 클래스
Object[] Arr (부모 타입의 배열 선언) = "문자열", 1; (자식 타입의 데이터가 문자열/정수이든 상관없이 대입 가능)

<매개변수의 다형성(Monster monster > Rat/Rabbit/Pig)>
= monster라는 하나의 매개변수만 호출해도, rat/rabbit/pig 등 각각의 메서드 호출이 가능해 짐

<강제 타입 변환>
(부모 변수) = (자식타입 인스턴스 대입)
Parent p = new Child();
-> (자식 x)정의된 부모 메서드만을 호출
-> 오버라이딩 된 메서드는, (부모 x)자식 메서드를 우선 호출

(자식 변수) = (부모타입 변수 p -> 자식타입으로 강제 형 변환)
Child c = (Child)p;
--> 자식 메서드 호출 가능

(자식 변수) = (자식타입 인스턴스 대입)
Child cc = new Child();
--> 자식 메서드 호출 가능

